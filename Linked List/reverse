#include <iostream>
using namespace std;

class node{
    public:
        int data;
        node *next;
    //constructor
        node(int d){
            data = d;
            next = NULL;
        }
};

void insertAtHead(node *&head, int d){
    if(head == NULL){
        head = new node(d);
        return;
    }
    node *n = new node(d);
    n->next = head;
    head= n;
}

void reverse(node *&head){
    node *current = head;
    node *prev = NULL;
    node *N;
    while(current != NULL){
        N = current->next; //save the next node
        current->next = prev;//makethe current node point to prev
        //update prev and current, take them 1 step forward
        prev = current;
        current = N;
    }
    head = prev;
}

void print(node *head){
    while(head != NULL){
        cout<<head->data<<" -> ";
        head = head->next;
    }
}

node *take_input(){
    int d;
    cin>>d;
    node *head = NULL;
    while(d != -1){
        insertAtHead(head, d);
        cin>>d;
   }
   return head;
}

int main(){
    node *head = take_input();
    print(head);
    return 0;
}
/*
Input
90 19  9  10  1  4  3  -1
Output
3 -> 4 -> 1 -> 10 -> 9 -> 19 -> 90 -> 
*/