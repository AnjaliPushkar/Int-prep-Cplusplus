//soln might be wrong
#include<iostream>
#include<list>
using namespace std;

template<class ForwardIterator, class T, class compare>
ForwardIterator search(ForwardIterator start, ForwardIterator end, T key, compare cmp){
    while(start != end){
        if(cmp(*start, key)){
            return start;
        }
        else{
            start++;
        }
    }

    return end;
}

class Book{
    public:
        string name;
        int price;
    
    Book(){
        
    }
    Book(string name, int price){
        this->name = name;
        this->price = price;
    }
};

class BookCompare{
  public :
    bool operator()(){
        cout<<"inside comparator function";
    }
};

int main(){
    Book b1("C++", 100);
    Book b2("java", 120);
    Book b3("python", 130);
    
    list<Book> l;
    l.push_back(b1);
    l.push_back(b2);
    l.push_back(b3);
    
    Book booktofind("C++", 110);
    BookCompare cmp;
    
    auto it = search(l.begin(), l.end(), booktofind, cmp);
    if(it != l.end()){
        cout<<"found";
    }
    else{
        cout<<"not found"<<endl;
    }
    return 0;
}