#include<iostream>
#include<list>
using namespace std;

//not limited to one, it works on different container like vector, list
template<class ForwardIterator, class T>
ForwardIterator search(ForwardIterator start, ForwardIterator end, T key){
    while(start != end){
        if(*start == key){
            return start;
        }
        else{
            start++;
        }
    }

    return end;
}

int main(){
    list<int> l;
    l.push_back(1);
    l.push_back(2);
    l.push_back(9);
    l.push_back(4);
    
    auto it = search(l.begin(), l.end(), 9);
    if(it == l.end()){
        cout<<"not found";
    }
    else{
        cout<<*it<<endl;
    }
    return 0;
}

//op : if present will write key value not the index value